# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

orbs:
  docker: circleci/docker@2.2.0

# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  Build:    
    docker:
      - image: cimg/openjdk:11.0               
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout

      # Build JAR file
      - run:
          name: Maven build
          command: mvn -B -DskipTests clean package

      # Save shared data
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
          # taken to be the root directory of the workspace.
          root: .
          # Must be relative path from root
          paths:
            - target/todo-backend-*.jar
            - docker

      # Then run your tests!
      #- run:
      #    name: Test
      #    command: mvn test
      
  docker-push:
    docker:
      - image: cimg/openjdk:11.0
    steps:
      # Access shared data
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: .

      # Install Docker
      - setup_remote_docker

      # Login into Docker Hub
      - run:
          name: Docker login
          command: echo $DOCKER_PASSWORD | docker login --username $DOCKER_USER --password-stdin     

      # Build Docker image
      - docker/build:
          docker-context: .
          path: ./docker
          dockerfile: todo-backend.dockerfile
          image: ddrram/todo-backend
          tag: 'latest,1.3.$CIRCLE_BUILD_NUM'

      # Push Docker image
      - docker/push:
          image: ddrram/todo-backend           
          tag: latest,1.3.$CIRCLE_BUILD_NUM

  Deploy:
    docker:
      - image: cimg/openjdk:11.0
    steps:
        - run:
            name: Deploy Over SSH
            command: ssh $SSH_USER@$SSH_HOST 'echo docker ps'

# Invoke jobs via workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  Maven Build: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      #- Build          
      #- docker-push:
      #    context:
      #      - build-context
      #    requires:
      #      - Build
      #    #filters:
          #  branches:
          #    ignore: /.*/
          #    only: master
      - Deploy
          #requires:
          #  - docker-push
